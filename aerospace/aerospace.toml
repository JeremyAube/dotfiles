# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5
inner.vertical =   5
outer.left =       5
outer.bottom =     5
outer.top =        5
outer.right =      5

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec]                   # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true  # If you don't touch "exec" section,
[exec.env-vars]          # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-cmd-alt-period = 'layout tiles horizontal vertical'
ctrl-cmd-alt-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-cmd-alt-h = 'focus left'
ctrl-cmd-alt-j = 'focus down'
ctrl-cmd-alt-k = 'focus up'
ctrl-cmd-alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-cmd-alt-shift-h = 'move left'
ctrl-cmd-alt-shift-j = 'move down'
ctrl-cmd-alt-shift-k = 'move up'
ctrl-cmd-alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
ctrl-cmd-alt-minus = 'resize smart -50'
ctrl-cmd-alt-equal = 'resize smart +50'

ctrl-cmd-alt-enter = "fullscreen"

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
# In your config, you can drop workspace bindings that you don't need
ctrl-cmd-alt-q = 'workspace 1'
ctrl-cmd-alt-w = 'workspace 2'
ctrl-cmd-alt-e = 'workspace 3'
ctrl-cmd-alt-a = 'workspace 4'
ctrl-cmd-alt-s = 'workspace 5'
ctrl-cmd-alt-d = 'workspace 6'
ctrl-cmd-alt-u = 'workspace A'
ctrl-cmd-alt-i = 'workspace B'
ctrl-cmd-alt-o = 'workspace C'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
ctrl-cmd-alt-shift-q = 'move-node-to-workspace 1'
ctrl-cmd-alt-shift-w = 'move-node-to-workspace 2'
ctrl-cmd-alt-shift-e = 'move-node-to-workspace 3'
ctrl-cmd-alt-shift-a = 'move-node-to-workspace 4'
ctrl-cmd-alt-shift-s = 'move-node-to-workspace 5'
ctrl-cmd-alt-shift-d = 'move-node-to-workspace 6'
ctrl-cmd-alt-shift-u = 'move-node-to-workspace A'
ctrl-cmd-alt-shift-i = 'move-node-to-workspace B'
ctrl-cmd-alt-shift-o = 'move-node-to-workspace C'

ctrl-cmd-alt-left = 'join-with left'
ctrl-cmd-alt-down = 'join-with down'
ctrl-cmd-alt-up = 'join-with up'
ctrl-cmd-alt-right = 'join-with right'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
ctrl-cmd-alt-space = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

# Workspace 1 (Browser)
[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = "move-node-to-workspace 1"

# Workspace 2 (Code)
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'com.apple.dt.Xcode'
run = "move-node-to-workspace 2"

[[on-window-detected]]
if.app-id = 'com.google.android.studio'
run = "move-node-to-workspace 2"

# Workspace 3 (Communication)
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = "move-node-to-workspace 3"

[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = "move-node-to-workspace 3"

# Workspace 4
[[on-window-detected]]
if.app-id = 'com.culturedcode.ThingsMac'
run = "move-node-to-workspace 4"

# Floating
[[on-window-detected]]
if.app-id = 'com.apple.iphonesimulator'
run = "layout floating"
